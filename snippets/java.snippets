#====================================================================
# Modifications by Leandro Pincini < leandropincini@gmail.com >
#====================================================================
snippet main
	public static void main (String [] args) {
		${1:/* code */}
	}
#====================================================================
# End of Modifications
#====================================================================
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw 
snippet sy
	synchronized
snippet j.u
	java.util
snippet if
	if (${1}) ${2}
snippet wh
	while (${1}) ${2}
snippet for
	for (${1}; ${2}; ${3}) ${4}
snippet fore
	for (${1} : ${2}) ${3}
snippet sw
	switch (${1}) ${2}
snippet cs
	case ${1}:
		${2}
	${3}
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
#====================================================================
# Added by Leandro Pincini < leandropincini@gmail.com >
#
#  Play framework's snippets session 
#====================================================================
snippet mm
	@ManyToMany
	${1}
snippet mo
	@ManyToOne
	${1}
snippet om
	OneToMany${1:(cascade=CascadeType.ALL)}
	${2}
snippet oo
	@OneToOne
	${1}
snippet action
	public static void ${1:index}(${2:args}) { ${3} }
snippet before
	@Before
	static void ${1:intercept}(${2:args}) { ${3} }
snippet warn
	Logger.warn(${1:param});${2}
#====================================================================
#  End of Play framework's snippets session 
#====================================================================
